//
//  SecondViewController.swift
//  TFS-Chat
//
//  Created by a.kramerov on 23.02.2020.
//  Copyright ¬© 2020 a.kramerov. All rights reserved.
//

import UIKit



protocol imageDataDelegate {
       func passImage(image: UIImage)
   }


class ProfileViewController: UIViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate {
    
    @IBOutlet weak var profilePicture: UIImageView!
    @IBOutlet weak var changeProfilePictureButton: UIButton!
    @IBOutlet weak var editButton: UIButton!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var contentView: UIView!
    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var aboutUserLabel: UILabel!
    var delegate: imageDataDelegate?
//    required init?(coder aDecoder: NSCoder) {
//        super.init(coder: aDecoder)
//        print(editButton.frame)
//    } –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–∞–¥–∞–µ—Ç —Ç.–∫. —Å–≤–æ–π—Å—Ç–≤–æ frame –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - editButton –µ—â—ë –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        print(editButton.frame)
        editButton.layer.cornerRadius = 10
        editButton.layer.borderWidth = 2
        editButton.layer.borderColor = UIColor.black.cgColor
        if let image = getSavedImage(named: "profilePicture") {
            profilePicture.image = image
        }
        aboutUserLabel.text = "üåØ –õ—é–±–ª—é —à–∞–≤–µ—Ä–º—É\n‚úñÔ∏è –ë—ã—Å—Ç—Ä–æ –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–º–Ω–æ–∂–∞—é –≤ —É–º–µ\nüë®‚Äçüè´ –≠–∫—Å–ø–µ—Ä—Ç –≤–æ –≤—Å—ë–º"
    }
    
    override func viewDidLayoutSubviews() {
        changeProfilePictureButton.layer.cornerRadius = changeProfilePictureButton.frame.width / 2
        profilePicture.layer.cornerRadius = changeProfilePictureButton.layer.cornerRadius
    }
    
    override func viewDidAppear(_ animated: Bool) {
        print(editButton.frame) //frame —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è –ø–æ—Ç–æ–º—É —á—Ç–æ –≤–æ viewDidLoad –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ä–∞–∑–º–µ—Ä—ã —Ñ—Ä–µ–π–º–∞ –ø–æ —Å—Ç–æ—Ä–∏–±–æ–∞—Ä–¥—É, –∞ –≤–æ viewDidAppear —ç—Ç–∏ —Ä–∞–∑–º–µ—Ä—ã —É–∂–µ —Å–æ–æ—Ç–Ω–æ—Å—è—Ç—Å—è —Å–æ –≤—Å–µ–º —Ç–µ–∫—É—â–∏–º –ª—ç–π–∞—É—Ç–æ–º –¥–µ–≤–∞–π—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø—É—â–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü–æ—ç—Ç–æ–º—É, –Ω–µ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞—Å—á—ë—Ç—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ñ—Ä–µ–π–º–∞–º–∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤–æ viewDidLoad
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        if let image = self.profilePicture.image{
            delegate?.passImage(image: image)
        }
    }
    
    @IBAction func closePressed(_ sender: Any) {
        self.dismiss(animated: true, completion: nil)
    }
    
    @IBAction func changePicturePressed(_ sender: Any) {
        let acionSheet = UIAlertController(title: "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", message: nil, preferredStyle: .actionSheet)
        acionSheet.addAction(UIAlertAction(title: "–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ", style: .default, handler: { (UIAlertAction) in
            self.chooseImage(choosenSource: .camera)
        }))
        acionSheet.addAction(UIAlertAction(title: "–í—ã–±—Ä–∞—Ç—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏", style: .default, handler: { (UIAlertAction) in
            self.chooseImage(choosenSource: .photoLibrary)
        }))
        acionSheet.addAction(UIAlertAction(title: "–û—Ç–º–µ–Ω–∞", style: .cancel, handler: nil))
        self.present(acionSheet, animated: true, completion: nil)
    }
    
    func chooseImage (choosenSource: UIImagePickerController.SourceType) {
        if UIImagePickerController.isSourceTypeAvailable(choosenSource) {
            let imagePicker = UIImagePickerController()
            imagePicker.sourceType = choosenSource
            imagePicker.delegate = self
            present(imagePicker, animated: true, completion: nil)
        }
    }
    
    func saveImage(image: UIImage) {
        guard let data = image.jpegData(compressionQuality: 1) ?? image.pngData() else {
            return 
        }
        guard let directory = try? FileManager.default.url(for: .documentDirectory, in: .userDomainMask, appropriateFor: nil, create: false) as NSURL else {
            return
        }
        do {
            try data.write(to: directory.appendingPathComponent("profilePicture.png")!)
        } catch {
            print(error.localizedDescription)
        }
    }
    
    func getSavedImage(named: String) -> UIImage? {
        if let dir = try? FileManager.default.url(for: .documentDirectory, in: .userDomainMask, appropriateFor: nil, create: false) {
            return UIImage(contentsOfFile: URL(fileURLWithPath: dir.absoluteString).appendingPathComponent(named).path)
        }
        return nil
    }
}

extension ProfileViewController {
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        if let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage {
            self.profilePicture.image = image
            saveImage(image: image)
            dismiss(animated: true, completion: nil)
        } else {
            let alert = UIAlertController(title: "–û—à–∏–±–∫–∞", message: "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫", preferredStyle: .alert)
            present(alert, animated: true, completion: nil)
        }
    }
}
